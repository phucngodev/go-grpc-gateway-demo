syntax = "proto3";

package api.blog.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "kratos-blog/api/blog/v1;v1";
option java_multiple_files = true;
option java_package = "api.blog.v1";


service BlogService {
  rpc CreateArticle(CreateArticleRequest) returns (CreateArticleRespone) {
    option (google.api.http) = {
      post: "/v1/articles"
      body: "*"
    };
  }

  rpc UpdateArticle(UpdateArticleRequest) returns (UpdateArticleResponse) {
    option (google.api.http) = {
      post: "/v1/articles/{id}"
      body: "*"
    };
  }

  rpc DeleteArticle(DeleteArticleRequest) returns (DeleteArticleRespone) {
    option (google.api.http) = {
      delete: "/v1/articles/{id}"
    };
  }

  rpc GetArticle(GetArticleRequest) returns (GetArticleRespone) {
    option (google.api.http) = {
      get: "/v1/articles/{id}"
    };
  }

  rpc ListArticle(ListArticleRequest) returns (ListArticleResponse) {
    option (google.api.http) = {
      get: "/v1/articles"
    };
  }

}

message Article {
  int64 id = 1;
  string title = 2;
  string content = 3;
}

message CreateArticleRequest {
  string title = 1 [(validate.rules).string = {min_len: 5, max_len: 50}];
  string content = 2 [(validate.rules).string = {min_len: 5}];
}

message CreateArticleRespone {
  Article Article = 1;
}

message UpdateArticleRequest {
  int64 id = 1 [(validate.rules).int64 = {gt: 0}];
  string title  = 2 [(validate.rules).string = {min_len: 5, max_len: 50}];
  string content = 3;
}

message UpdateArticleResponse {
  Article Article = 1;
}

message DeleteArticleRequest {
  int64 id = 1;
}

message DeleteArticleRespone {
}

message GetArticleRequest {
  int64 id = 1;
}

message GetArticleRespone {
  Article Article = 1;
}

message ListArticleRequest {
}

message ListArticleResponse {
  repeated Article results = 1;
}
